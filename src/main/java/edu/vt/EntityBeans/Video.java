/*
 * Created by Team 5 (Alex Kyer, Ben Dunko, Emaan Rana, David Carroll, Chris Koehler) on 2021.12.7
 * Copyright Â© 2021 Team 5. All rights reserved.
 */
package edu.vt.EntityBeans;

import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/*
The @Entity annotation designates this class as a JPA Entity POJO class
representing the PublicVideo table in the UsersVideos database.
 */
@Entity

// Name of the database table represented
@Table(name = "Video")

@NamedQueries({
        // This named query is used in PublicVideoFacade
        @NamedQuery(name = "Video.findByTitle", query = "SELECT c FROM Video c WHERE c.title = :title")
})

public class Video implements Serializable {
    /*
========================================================
Instance variables representing the attributes (columns)
of the Video table in the MusicianConnectDB database.

CREATE TABLE Video
(
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    title VARCHAR (512) NOT NULL,
    description VARCHAR (2048) NOT NULL,
    youtube_video_id VARCHAR (32) NOT NULL,
    category VARCHAR (32) NOT NULL,
    PRIMARY KEY (id)
);
========================================================
 */

    private static final long serialVersionUID = 1L;
    /*
    Primary Key id is auto generated by the system as an Integer value
    starting with 1 and incremented by 1, i.e., 1,2,3,...
    A deleted entity object's primary key number is not reused.
     */
    // id INT UNSIGNED NOT NULL AUTO_INCREMENT
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = "id")
    private Integer id;

    // PublicVideo title
    // title VARCHAR(512) NOT NULL
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 512)
    @Column(name = "title")
    private String title;

    // PublicVideo description
    // description VARCHAR(2048) NOT NULL
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 2048)
    @Column(name = "description")
    private String description;

    // PublicVideo youtube_video_id
    // youtube_video_id VARCHAR(32) NOT NULL
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 32)
    @Column(name = "youtube_video_id")
    private String youtubeVideoId;

    // PublicVideo category
    // category VARCHAR(32) NOT NULL
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 32)
    @Column(name = "category")
    private String category;

    /*
    =================================================================
    Class constructors for instantiating a Video entity object to
    represent a row in the Video table in the MusicianConnectDB database.
    =================================================================
     */
    // Used in PrepareCreate method in VideoController
    public Video() {
        //Intentionally left blank
    }

    //Not used but kept for potential future use
    public Video(String title, String description, String youtubeVideoId, String category) {
        this.title = title;
        this.description = description;
        this.youtubeVideoId = youtubeVideoId;
        this.category = category;
    }

    /*
    ======================================================
    Getter and Setter methods for the attributes (columns)
    of the Video table in the MusicianConnectDB database.
    ======================================================
     */
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getYoutubeVideoId() {
        return youtubeVideoId;
    }

    public void setYoutubeVideoId(String youtubeVideoId) {
        this.youtubeVideoId = youtubeVideoId;
    }

    public String getCategory() {
        return category;
    }

    public void setCategory(String category) {
        this.category = category;
    }

    /*
    ================================
    Instance Methods Used Internally
    ================================
     */

    // Generate and return a hash code value for the object with database primary key id
    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    /*
     Checks if the Video object identified by 'object' is the same as the Video object identified by 'id'
     Parameter object = Video object identified by 'object'
     Returns True if the Video 'object' and 'id' are the same; otherwise, return False
     */
    @Override
    public boolean equals(Object object) {
        if (!(object instanceof Video)) {
            return false;
        }
        Video other = (Video) object;
        return (this.id != null || other.id == null) && (this.id == null || this.id.equals(other.id));
    }

    // Return String representation of database primary key id
    @Override
    public String toString() {
        return id.toString();
    }
}
